/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import static app.chatInterno.tablaCampana;
import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JHON.CHAVEZ
 */
public class addCampana extends javax.swing.JFrame {

    Db cc = new Db();
    Connection con = (Connection) cc.connect();
    

    Calendar calendario = Calendar.getInstance();
    public static  int idCampana;

    /**
     * Creates new form addCampana
     */
    public addCampana() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        //mostrarCampana();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNombreCampana = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnInsertarC = new javax.swing.JButton();
        cbxEstadoC = new javax.swing.JComboBox<>();
        btnActualizarC = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre Campa√±a");

        jLabel4.setText("Estado");

        btnInsertarC.setText("Insertar");
        btnInsertarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarCActionPerformed(evt);
            }
        });

        cbxEstadoC.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inactivo", "Activo" }));
        cbxEstadoC.setSelectedIndex(0);

        btnActualizarC.setText("Actualizar");
        btnActualizarC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnInsertarC, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(btnActualizarC))
                        .addComponent(txtNombreCampana, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cbxEstadoC, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(97, 97, 97)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombreCampana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbxEstadoC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsertarC)
                    .addComponent(btnActualizarC))
                .addGap(78, 78, 78))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarCActionPerformed
        nuevaCampana();
    }//GEN-LAST:event_btnInsertarCActionPerformed

    private void btnActualizarCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarCActionPerformed
        actualizarCampana();
    }//GEN-LAST:event_btnActualizarCActionPerformed

    public void mostrarCampana(){
        String[] titulos = {"ID", "Nombre","Creador", "Fecha","estado"};
        String [] registros = new String[7];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        String SQL = "SELECT * FROM campana";
        
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                registros[0]=rs.getString("idcampana");
                registros[1]=rs.getString("nombreCampana");
                registros[2]=rs.getString("creadorCampana");
                registros[3]=rs.getString("fechaCreacionCam");
                //registros[4]=rs.getString("estadoCamp");
                int estado = rs.getInt("estadoCamp");
                if(estado == 0) {
                    registros[4] = "Inactivo";
                }else if (estado == 1) {
                    registros[4] = "Activo";
                }
                modelo.addRow(registros);
            }
            tablaCampana.setModel(modelo);
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error de datos"+ e.getMessage());
        }
    }
    
   
    
    public void nuevaCampana() {
        try {
            String SQL = "insert into campana (nombreCampana, creadorCampana, fechaCreacionCam, estadoCamp) values (?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(SQL);
            
            pst.setString(1, txtNombreCampana.getText());
            
            LoginForm lg = new LoginForm();
            pst.setString(2, lg.dt);

            DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
            Date date = new Date();
            pst.setString(3, (dateFormat.format(date)));

            int seleccionado = cbxEstadoC.getSelectedIndex();
            pst.setString(4, Integer.toString(seleccionado));

            pst.execute();

            JOptionPane.showMessageDialog(null, "Registro exitoso");
//            mostrarAuto();
            this.dispose();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error de Registro" + e.getMessage());
        }
    }

    
     public void actualizarCampana(){
        
        try {
            String SQL = "update campana set nombreCampana=?, estadoCamp=? where idcampana=?";
            PreparedStatement pst = con.prepareStatement(SQL);
            
            pst.setString(1, txtNombreCampana.getText());
            
//            int seleccionado = cbxEstadoC.getSelectedIndex();
//            pst.setString(2, Integer.toString(seleccionado));
            
            int estado = cbxEstadoC.getSelectedIndex();
            pst.setInt(2, estado);
            
            pst.setInt(3, this.idCampana);
            
            pst.execute();
            
            JOptionPane.showMessageDialog(null, "Registro actualizado");
            this.dispose();
            mostrarCampana();
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error de actualizacion "+ e.getMessage());
        }
        
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addCampana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addCampana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addCampana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addCampana.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addCampana().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnActualizarC;
    public static javax.swing.JButton btnInsertarC;
    public static javax.swing.JComboBox<String> cbxEstadoC;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel4;
    public static javax.swing.JTextField txtNombreCampana;
    // End of variables declaration//GEN-END:variables
}
