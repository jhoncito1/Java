/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import com.mysql.jdbc.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.Action;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.codec.digest.DigestUtils;

/**
 *
 * @author JHON.CHAVEZ
 */
public class addUsuario extends javax.swing.JFrame {

    int posx, posy;
    Db cc = new Db();
    Connection con = (Connection) Db.connect();
    public static  int idUsuario;
    /**
     * Creates new form addUsuario
     */
    public addUsuario() {
        initComponents();
        this.setLocationRelativeTo(null); 
        
        mostrarCampana();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtNombreU = new javax.swing.JTextField();
        txtApellidoU = new javax.swing.JTextField();
        txtUserName = new javax.swing.JTextField();
        jPassword = new javax.swing.JPasswordField();
        jPasswordConfirm = new javax.swing.JPasswordField();
        cbxNivelU = new javax.swing.JComboBox<>();
        cbxEstadoU = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        lbApellido = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblPasswor = new javax.swing.JLabel();
        lblPassworC = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbxCampanaU = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnInsertarU = new javax.swing.JButton();
        btnActualizarU = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        lblFondo = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(480, 500));
        setUndecorated(true);
        getContentPane().setLayout(null);
        getContentPane().add(txtNombreU);
        txtNombreU.setBounds(160, 80, 298, 24);

        txtApellidoU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidoUActionPerformed(evt);
            }
        });
        getContentPane().add(txtApellidoU);
        txtApellidoU.setBounds(160, 120, 298, 24);
        getContentPane().add(txtUserName);
        txtUserName.setBounds(160, 160, 298, 24);
        getContentPane().add(jPassword);
        jPassword.setBounds(160, 320, 298, 22);
        getContentPane().add(jPasswordConfirm);
        jPasswordConfirm.setBounds(160, 360, 298, 22);

        cbxNivelU.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Asesor", "Coordinador", "Administrador" }));
        getContentPane().add(cbxNivelU);
        cbxNivelU.setBounds(160, 240, 150, 26);

        cbxEstadoU.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Inactivo", "Activo" }));
        getContentPane().add(cbxEstadoU);
        cbxEstadoU.setBounds(160, 280, 150, 26);

        jLabel1.setText("Nombre");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(20, 80, 45, 16);

        lbApellido.setText("Apellido");
        getContentPane().add(lbApellido);
        lbApellido.setBounds(20, 120, 45, 16);

        jLabel3.setText("Usuario");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(20, 160, 44, 16);

        lblPasswor.setText("Contraseña");
        getContentPane().add(lblPasswor);
        lblPasswor.setBounds(20, 320, 66, 16);

        lblPassworC.setText("Confirmar contraseña");
        getContentPane().add(lblPassworC);
        lblPassworC.setBounds(20, 360, 125, 16);

        jLabel5.setText("Campaña");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(20, 200, 80, 16);

        cbxCampanaU.setMinimumSize(new java.awt.Dimension(450, 500));
        cbxCampanaU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCampanaUActionPerformed(evt);
            }
        });
        getContentPane().add(cbxCampanaU);
        cbxCampanaU.setBounds(160, 200, 300, 26);

        jLabel6.setText("Estado");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(20, 280, 50, 20);

        jLabel7.setText("Nivel");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(20, 240, 50, 20);

        btnInsertarU.setText("Insertar");
        btnInsertarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarUActionPerformed(evt);
            }
        });
        getContentPane().add(btnInsertarU);
        btnInsertarU.setBounds(270, 390, 80, 32);

        btnActualizarU.setText("Actualizar");
        btnActualizarU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarUActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizarU);
        btnActualizarU.setBounds(370, 390, 90, 32);

        jLabel2.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel2.setText("X");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jLabel2MouseDragged(evt);
            }
        });
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });
        getContentPane().add(jLabel2);
        jLabel2.setBounds(460, 0, 20, 30);

        lblFondo.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                lblFondoMouseDragged(evt);
            }
        });
        lblFondo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lblFondoMousePressed(evt);
            }
        });
        getContentPane().add(lblFondo);
        lblFondo.setBounds(10, 20, 460, 420);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxCampanaUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCampanaUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxCampanaUActionPerformed

    private void txtApellidoUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidoUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtApellidoUActionPerformed

    private void btnInsertarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertarUActionPerformed
    
        nuevoUsuario();
    }//GEN-LAST:event_btnInsertarUActionPerformed

    private void btnActualizarUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarUActionPerformed
        actualizarUsuario();
        //limpiarCajas();
    }//GEN-LAST:event_btnActualizarUActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        this.dispose();
    }//GEN-LAST:event_jLabel2MouseClicked

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseDragged
        
    }//GEN-LAST:event_jLabel2MouseDragged

    private void lblFondoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFondoMousePressed
        posx = evt.getX();
        posy = evt.getY();
    }//GEN-LAST:event_lblFondoMousePressed

    private void lblFondoMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblFondoMouseDragged
        int xp = evt.getXOnScreen() - posx;
        int yp = evt.getYOnScreen() - posy;
        this.setLocation(xp, yp);
    }//GEN-LAST:event_lblFondoMouseDragged

    
    public void mostrarCampana(){
        String registros = "";
        DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        String SQL = "SELECT * FROM campana";
        
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                registros=rs.getString("nombreCampana");
                
                modelo.addElement(registros);
            }
            cbxCampanaU.setModel(modelo);
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error de datos"+ e.getMessage());
        }
        
    }
    
    public int getidCampana(String nombreCampana){
        String SQL = "SELECT * FROM campana where nombreCampana = '"+nombreCampana+"'";
        int id = 0;
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                
                id=rs.getInt("idcampana");

            }
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error de datos"+ e.getMessage());
        }
        return id;
    }
    
    
    
    public void nuevoUsuario(){
        try {
            String SQL = "INSERT INTO usuarios(nombreUsuario, apellidosUsuario, loginUsuario, password, campana, nivel, estado) VALUES(?,?,?,?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(SQL);
            pst.setString(1, txtNombreU.getText());
            pst.setString(2, txtApellidoU.getText());
            pst.setString(3, txtUserName.getText());
            
            if (jPassword.getText() == null ? jPasswordConfirm.getText() == null : jPassword.getText().equals(jPasswordConfirm.getText())) {
               String textoEncriptadoConSHA = DigestUtils.sha1Hex(jPassword.getText());
               pst.setString(4, textoEncriptadoConSHA); 
            }else{
                JOptionPane.showMessageDialog(null, "Contraseñas no coinciden");
            }

            String nombreCampana = cbxCampanaU.getSelectedItem().toString();
            int id = getidCampana(nombreCampana);
            pst.setString(5, String.valueOf(id));
            
            int nivel = cbxNivelU.getSelectedIndex();
            pst.setString(6, Integer.toString(nivel));
            
            int estado = cbxEstadoU.getSelectedIndex();
            pst.setString(7, String.valueOf(estado));
            
            pst.execute();
            
            JOptionPane.showMessageDialog(null, "Registro exitoso");
            
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error de Registro >>  "+ e.getMessage());
        }
    }
    
    public void actualizarUsuario(){
        
        try {
            String SQL = "update usuarios set nombreUsuario=?, apellidosUsuario=?, loginUsuario=?, campana=?, nivel=?, estado=? where idusuarios=?";
            PreparedStatement pst = con.prepareStatement(SQL);
            
            pst.setString(1, txtNombreU.getText());
            pst.setString(2, txtApellidoU.getText());
            pst.setString(3, txtUserName.getText());
            
            String nombreCampana = cbxCampanaU.getSelectedItem().toString();
            int id = getidCampana(nombreCampana);
            pst.setString(4, String.valueOf(id));

            int nivel = cbxNivelU.getSelectedIndex();
            pst.setInt(5, nivel);
            
            int estado = cbxEstadoU.getSelectedIndex();
            pst.setInt(6, estado);
            
            
            pst.setInt(7, this.idUsuario);
            
            pst.execute();
            JOptionPane.showMessageDialog(null, "Registro actualizado");
            this.dispose();
            mostrarUsuarios();
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error de actualizacion "+ e.getMessage());
        }
        
    }
    
    
    public void mostrarUsuarios(){
        String[] titulos = {"ID", "Nombre","Apellido", "Usuario", "Contraseña","Campaña","Nivel","estado"};
        String [] registros = new String[8];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        String SQL = "select usuarios.idusuarios, usuarios.nombreUsuario, usuarios.apellidosUsuario, usuarios.loginUsuario, usuarios.password, campana.nombreCampana as campana, usuarios.nivel, usuarios.estado\n" +
                     "from usuarios inner join campana on campana.idcampana = usuarios.campana";
        
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                registros[0]=rs.getString("idusuarios");
                registros[1]=rs.getString("nombreUsuario");
                registros[2]=rs.getString("apellidosUsuario");
                registros[3]=rs.getString("loginUsuario");
                registros[4]=rs.getString("password");
                registros[5]=rs.getString("campana");
                int dato = rs.getInt("nivel");
                
                if(dato == 0) {
                    registros[6] = "Asesor";
                    System.out.println(dato);
                }else if (dato == 1) {
                    registros[6] = "Coordinador";
                }
                else if (dato == 2) {
                    registros[6] = "Administrador";
                }
                
                int estado = rs.getInt("estado");
//                registros[7]=rs.getString("estado");
                if(estado == 0) {
                    registros[7] = "Inactivo";
                    System.out.println(dato);
                }else if (estado == 1) {
                    registros[7] = "Activo";
                }


                modelo.addRow(registros);
            }
            chatInterno.tablaUsuarios.setModel(modelo);
        } 
        catch (SQLException e) {
            JOptionPane.showMessageDialog(null,"Error de datos  fg "+ e.getMessage());
        }
    }
    
    public  void limpiarCajas(){
        txtNombreU.setText("");
        txtApellidoU.setText("");
        txtUserName.setText("");
        jPassword.setText("");
        //FechaNacimientoCond.actionPerformed();
        jPasswordConfirm.setText("");
        cbxCampanaU.setAction((Action) cbxCampanaU);
        cbxNivelU.setAction((Action) cbxNivelU);
        cbxEstadoU.setAction((Action) cbxEstadoU);
        
    }
     
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addUsuario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addUsuario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnActualizarU;
    public static javax.swing.JButton btnInsertarU;
    public static javax.swing.JComboBox<String> cbxCampanaU;
    public static javax.swing.JComboBox<String> cbxEstadoU;
    public static javax.swing.JComboBox<String> cbxNivelU;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    public static javax.swing.JLabel jLabel7;
    public static javax.swing.JPasswordField jPassword;
    public static javax.swing.JPasswordField jPasswordConfirm;
    private javax.swing.JLabel lbApellido;
    private javax.swing.JLabel lblFondo;
    public static javax.swing.JLabel lblPasswor;
    public static javax.swing.JLabel lblPassworC;
    public static javax.swing.JTextField txtApellidoU;
    public static javax.swing.JTextField txtNombreU;
    public static javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
