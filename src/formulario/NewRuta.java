/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formulario;

import com.mysql.jdbc.Connection;
import conexionSQL.ConexionSQL;
import static formulario.NewConductor.numeroAuto;
import static formulario.transporte.btnActualizarRuta;
import static formulario.transporte.btnEliminarRuta;
import static formulario.transporte.btnNuevoRuta;
import static formulario.transporte.tablaRuta1;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author JHON.CHAVEZ
 */
public class NewRuta extends javax.swing.JFrame {
    ConexionSQL cc = new ConexionSQL();
    Connection con =cc.Conexion();
    public  static int id_ruta;
    int posx,posy;

    /**
     * Creates new form NewRuta
     */
    public NewRuta() {
        initComponents();
        this.setLocationRelativeTo(null);
        conductor();
        cliente();
        
        elemtns_trasnparent();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnCrearRuta = new javax.swing.JButton();
        btnActualizarRuta = new javax.swing.JButton();
        cbConductor = new javax.swing.JComboBox<>();
        cbCliente = new javax.swing.JComboBox<>();
        txtDestino = new javax.swing.JTextField();
        txtOrigen = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(102, 255, 204));
        setMinimumSize(new java.awt.Dimension(420, 350));
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });
        getContentPane().setLayout(null);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Conductor");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(30, 70, 59, 16);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Cliente");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(30, 110, 39, 16);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Origen");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(30, 150, 38, 16);

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Destino");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(30, 190, 43, 16);

        btnCrearRuta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        btnCrearRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearRutaActionPerformed(evt);
            }
        });
        getContentPane().add(btnCrearRuta);
        btnCrearRuta.setBounds(220, 260, 50, 50);

        btnActualizarRuta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/save.png"))); // NOI18N
        btnActualizarRuta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarRutaActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizarRuta);
        btnActualizarRuta.setBounds(290, 260, 50, 50);

        cbConductor.setBackground(new java.awt.Color(255, 255, 255));
        cbConductor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbConductor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbConductorActionPerformed(evt);
            }
        });
        getContentPane().add(cbConductor);
        cbConductor.setBounds(150, 70, 197, 26);

        cbCliente.setBackground(new java.awt.Color(255, 255, 255));
        cbCliente.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(cbCliente);
        cbCliente.setBounds(150, 110, 197, 26);

        txtDestino.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtDestino);
        txtDestino.setBounds(150, 190, 197, 24);

        txtOrigen.setBackground(new java.awt.Color(255, 255, 255));
        getContentPane().add(txtOrigen);
        txtOrigen.setBounds(150, 150, 197, 24);

        jLabel1.setFont(new java.awt.Font("Felix Titling", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Editar Ruta");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(30, 12, 150, 40);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/4308065-32.png"))); // NOI18N
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });
        getContentPane().add(jLabel7);
        jLabel7.setBounds(380, 0, 30, 30);

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fondo8.png"))); // NOI18N
        jLabel6.setText("jLabel6");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(0, 0, 430, 370);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearRutaActionPerformed
        if (txtOrigen.getText().isEmpty() || txtDestino.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Se deben completar todos los datos");
        }
        else{
            insertarRuta();
        }
    }
    
    public void elemtns_trasnparent(){
        btnCrearRuta.setContentAreaFilled(false);
        btnCrearRuta.setBorderPainted(false);
        
        btnActualizarRuta.setContentAreaFilled(false);
        btnActualizarRuta.setBorderPainted(false);
    }
    
    public void conductor(){
        String registros = "";
            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        String SQL = "SELECT * FROM conductor";
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                registros=rs.getString("nombre")+"-"+rs.getString("documento");
                String[] par =registros.split("-");
                modelo.addElement(par[0]+"-"+par[1]);
            }
            cbConductor.setModel(modelo);
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error de datos"+ e.getMessage());
        }
    }//GEN-LAST:event_btnCrearRutaActionPerformed

    private void btnActualizarRutaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarRutaActionPerformed
        actualizarRuta();
    }//GEN-LAST:event_btnActualizarRutaActionPerformed

    private void cbConductorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbConductorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbConductorActionPerformed

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        dispose();
        mostrarRuta();
    }//GEN-LAST:event_jLabel7MouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        int xp=evt.getXOnScreen() -posx;
        int yp=evt.getYOnScreen() -posy;
        this.setLocation(xp, yp);
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        posx=evt.getX();      
        posy=evt.getY();
    }//GEN-LAST:event_formMousePressed

    
    public void cliente(){
        String registros = "";
            DefaultComboBoxModel modelo = new DefaultComboBoxModel();
        String SQL = "SELECT * FROM cliente";
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                registros=rs.getString("nombre")+"-"+rs.getString("documento");
                String[] par =registros.split("-");
                modelo.addElement(par[0]+"-"+par[1]);
            }
            cbCliente.setModel(modelo);
            
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error de datos"+ e.getMessage());
        }
    }

    public String getidConductor (String documento){
        String SQL = "SELECT * FROM conductor where documento = '"+documento+"'";
        String id = "";
        System.out.println(documento);
        //String[] par =id.split("-");
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                id=rs.getString("documento");
            }
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error de datos ---- "+ e.getMessage());
        }
        return id;
    }
    
    public String getidCliente (String documentoC){
        String SQL = "SELECT * FROM cliente where documento = '"+documentoC+"'";
        String  idC = "";
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                idC=rs.getString("documento");
            }
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error de datos ==== "+ e.getMessage());
        }
        return idC;
    }

    public void mostrarRuta(){
        String[] titulos = {"ID", "Conductor","Cliente", "Origen","Destino"};
        String [] registros = new String[6];
        DefaultTableModel modelo = new DefaultTableModel(null, titulos);
        String SQL = "SELECT *, CO.nombre, CL.nombre FROM ruta R "
                + "join conductor CO on R.fk_conductor_doc = CO.documento "
                + "join cliente CL on R.fk_cliente_doc = CL.documento order by id_ruta asc";
        try {
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery(SQL);
            while (rs.next()) {
                registros[0]=rs.getString("id_ruta");
                registros[1]=rs.getString("CO.nombre");
                registros[2]=rs.getString("CL.nombre");
                registros[3]=rs.getString("origen");
                registros[4]=rs.getString("destino");
                modelo.addRow(registros);
            }
            tablaRuta1.setModel(modelo);
            btnNuevoRuta.setEnabled(true);
            btnActualizarRuta.setEnabled(false);
            btnEliminarRuta.setEnabled(false);
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error de datos"+ e.getMessage());
        }
    }
    

    public void insertarRuta(){
        try {
            String SQL = "insert into ruta (fk_conductor_doc, fk_cliente_doc, origen, destino) values (?,?,?,?)";
            PreparedStatement pst = con.prepareStatement(SQL);
            
            String[] documento = cbConductor.getSelectedItem().toString().split("-");
            String id=getidConductor(documento[1]);
            pst.setString(1, String.valueOf(id));
            
            String[] documentoC = cbCliente.getSelectedItem().toString().split("-");
            String idC= getidCliente(documentoC[1]);
            pst.setString(2, String.valueOf(idC));
            
            pst.setString(3, txtOrigen.getText());
            pst.setString(4, txtDestino.getText());
            
            
            pst.execute();
            JOptionPane.showMessageDialog(null, "Registro exitoso");
            this.dispose();
            mostrarRuta();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error de Registro ,,,,  "+ e.getMessage());
        }
    }
    
    
    
     public void actualizarRuta(){
        try {
            String SQL = "update ruta set fk_conductor_doc=?, fk_cliente_doc=?, origen=?, destino=? where id_ruta=?";
            PreparedStatement pst = con.prepareStatement(SQL);
            
            String[] documento = cbConductor.getSelectedItem().toString().split("-");
            String id=getidConductor(documento[1]);
            pst.setString(1, String.valueOf(id));
            
            String[] documentoC = cbCliente.getSelectedItem().toString().split("-");
            String idC= getidCliente(documentoC[1]);
            pst.setString(2, String.valueOf(idC));
            
            pst.setString(3, txtOrigen.getText());
            pst.setString(4, txtDestino.getText());
            pst.setString(5, String.valueOf(id_ruta));
            
            pst.execute();
            JOptionPane.showMessageDialog(null, "Registro actualizado");
            this.dispose();
            mostrarRuta();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error de actualizacion ,,,, "+ e.getMessage());
        }
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewRuta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewRuta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnActualizarRuta;
    public static javax.swing.JButton btnCrearRuta;
    public static javax.swing.JComboBox<String> cbCliente;
    public static javax.swing.JComboBox<String> cbConductor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    public static javax.swing.JTextField txtDestino;
    public static javax.swing.JTextField txtOrigen;
    // End of variables declaration//GEN-END:variables
}
